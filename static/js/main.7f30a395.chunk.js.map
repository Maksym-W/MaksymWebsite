{"version":3,"sources":["images/max.jpg","images/Robotics1.jpg","animations/transitions.js","pages/Home.js","pages/UofTResources.js","pages/CsProjects.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AnimatedPage","_ref","children","fromRight","animations","initial","opacity","x","animate","exit","React","createElement","motion","div","variants","transition","duration","Home","textStyle","color","style","marginTop","fontSize","src","maxPicture","className","alt","display","height","width","border","borderImage","flexWrap","flex","marginLeft","UofTResources","href","target","CsProjects","Robotics1","App","activeTab","setActiveTab","useState","handleTabChange","tab","navItemStyle","backgroundColor","borderColor","padding","Fragment","background","overflow","justifyContent","position","top","zIndex","Button","variant","onClick","disabled","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.7f30a395.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/max.067dee56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Robotics1.489d844c.jpg\";","import { motion } from \"framer-motion/dist/framer-motion\";\nimport React from 'react';\n\nconst AnimatedPage = ({ children, fromRight }) => {\n  const animations = {\n    initial: { opacity: 0, x: fromRight ? 100 : -100 },\n    animate: { opacity: 1, x: 0 },\n    exit: { opacity: 0, x: fromRight ? -100 : 100 },\n  };\n\n  return (\n    <motion.div\n      variants={animations}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      transition={{ duration: 1 }}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default AnimatedPage;\n","import React from 'react';\nimport maxPicture from '../images/max.jpg'\nimport AnimatedPage from '../animations/transitions';\n\nexport default function Home() {\n    const pictureStyle = {\n        display: 'block',\n        'margin-left': 'auto',\n        'margin-right': 'auto',\n        marginTop: '50px',\n        height: 'auto',\n        width: '50%',\n        border: '25px solid #e4ddca',\n        borderImage: 'linear-gradient(to bottom, #e4ddca, transparent) 1 49%'\n      };\n\n    const textStyle =  {\n        color: 'white',\n        'text-align': 'center'\n    }\n\n// Above is CSS code\n\n    return (\n        <AnimatedPage>\n            <div style={{marginTop: '20px'}}></div> {/* This is just for padding */}\n\n            <h1 style={{fontSize: '75px', ...textStyle}}>\n                I am Maksym Woychyshyn\n            </h1>\n            \n            <img src={maxPicture} className=\"App-logo\" alt=\"logo\" style={pictureStyle} />\n\n            <h2 style={textStyle}>\n                I code. Perferably not on paper.\n            </h2>\n\n            <div style={{ display: 'flex', flexWrap: 'wrap', marginTop: '20px' }}>\n                <h3 style={{ color: 'white', flex: '0 0 45%', marginLeft: '30px' }}>\n                I am currently a University Student at the University of Toronto where I take Math, Computer Science, \n                and Political Science courses. By the time I graduate, I aim to have a bachelors in Science\n                with a Major (Ive already completed the requirements for this!) or a Specialist in Computer Science, \n                a Major or Minor in Mathematics, and a minor in Political Science.\n                <br></br><br></br>\n                Outside of my Academic courses, I run the robotics club at UTM, involved in the UTM Urbanism Club as a treasurer, \n                am the vice president of the UTM Chess club. and an advisor to the Ukrainian Association of UTM\n                <br></br><br></br>\n                When not partaking in my professional life, I can usually be found playing guitar or piano, video editing, \n                learning languages, reading books about history/politics, or making projects with Arduinos. \n                <br></br><br></br>\n                If you'd ever like to chat about work, school, or anything else, feel free to reach out to either of my\n                 emails m.woychyshyn@mail.utoronto.ca or maksymwoychyshyn@gmail.com.\n                </h3>\n\n                <h3 style={{ flex: '0 0 50%', marginLeft: '60px' }}>\n                Im still trying to figure out what would be cool to put here. For now, I interned at the Canadian Government! Isn't that cool!? Also Im open to intern in fall 2024!\n                </h3>\n            </div>\n        </AnimatedPage>\n    )\n} ","// UofTResources.js\nimport React from 'react';\nimport AnimatedPage from '../animations/transitions';\n\nfunction UofTResources() {\n    const textStyle =  {\n        color: 'gray',\n    }\n  \n    return (\n    <AnimatedPage>\n      <div style={{ marginTop: '75px' }}></div>\n\n      <p>\n        <div style={{color: 'white'}}>\n        This page is meant for my great friends back at UofT\n        <br></br>\n        <br></br>\n      I figure its best to have as much information for everyone to learn from for free. All of these links are websites I found which pertain to courses at UofT. \n        If you have found any more, let me know and Il add them to this website.\n        As well, I might pair these up with historical averages. If you have data related to this, please let me know. Also if you think you know of a better \n        colour for the links, send me an email. Im not sure im entirely happy with the gray. \n      </div>\n        </p>\n\n        <h2 style={{color: 'white'}}>These sites are for Mathematics</h2>\n        <hr />\n      <a href=\"https://mcs.utm.utoronto.ca/~108s21/index.html\" target =\" blank\" style={textStyle}>\n            CSC108 (Intro to Computer Programming) <br></br>\n        </a>\n        <a href=\"https://mcs.utm.utoronto.ca/~207/index.html\" target =\" blank\" style={textStyle}>\n            CSC207 (Software Design) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~shaharry/csc236/\" target =\" blank\" style={textStyle}>\n            CSC236 (Introduction to the Theory of Computation)<br></br>\n        </a>\n        <a href=\"http://www.cs.utoronto.ca/~trebla/CSCB09-2023-Summer/\" target =\" blank\" style={textStyle}>\n            CSCB09\n        </a>\n        <a href=\"https://mcs.utm.utoronto.ca/~209/23s/index.shtml\" target =\" blank\" style={textStyle}>\n            CSC209 <br></br>\n        </a>\n        <a href=\"https://mcs.utm.utoronto.ca/~301/\" target =\" blank\" style={textStyle}>\n            CSC301 (Software Engineering)<br></br>\n        </a>\n        <a href=\"http://www.cs.toronto.edu/~sme/CSC302/\" target =\" blank\" style={textStyle}>\n            CSC302 (Software Engineering II)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~mashiyat/csc309/index.htm#top\" target =\" blank\" style={textStyle}>\n            CSC309 (Web programming in 2016) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~kianoosh/courses/csc309/\" target =\" blank\" style={textStyle}>\n            CSC309 (Web programming in 2022) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~rgrosse/courses/csc311_f21/\" target =\" blank\" style={textStyle}>\n            CSC311 (Machine Learning) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~lczhang/csc338_20191/\" target =\" blank\" style={textStyle}>\n            CSC338 (Numerical Methods) <br></br>\n        </a>\n        <a href=\"https://mcs.utm.utoronto.ca/~358/\" target =\" blank\" style={textStyle}>\n            CSC358 (Computer Networks) <br></br>\n        </a>\n        <a href=\"https://www.cs.utoronto.ca/~fidler/teaching/2021/CSC420.html\" target =\" blank\" style={textStyle}>\n            CSC420 (Image Understanding) <br></br>\n        </a>\n        <a href=\"https://mcs.utm.utoronto.ca/~338/\" target =\" blank\" style={textStyle}>\n            CSC338 (Numerical Methods)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~florian/courses/csc477_fall22/\" target =\" blank\" style={textStyle}>\n            CSC477 (Mobile Robotics) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~lyan/csc384/w2/csc384ch3search1.pdf\" target =\" blank\" style={textStyle}>\n            CSC384 (Introduction to Artificial Inteligence) <br></br>\n        </a>\n        <a href=\"https://utsc.utoronto.ca/~atafliovich/cscc24/ \" target =\" blank\" style={textStyle}>\n            CSCC24 \n        </a>\n        <a href=\"https://www.cs.utoronto.ca/~trebla/CSCC24-2023-Summer/\" target =\" blank\" style={textStyle}>\n            CSCC24 <br></br>\n        </a>\n        <a href=\"https://www.cs.utoronto.ca/~elias/csc404/\" target =\" blank\" style={textStyle}>\n            CSC404 (Intro to Video Game Design) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~nisarg/teaching/304f22/\" target =\" blank\" style={textStyle}>\n            CSC304 (Algorithmic Game Theory)<br></br>\n        </a>\n        <a href=\"https://www.teach.cs.toronto.edu/~csc369h/summer/content.shtml\" target =\" blank\" style={textStyle}>\n            CSC369 (Operating Systems)<br></br>\n        </a>\n        <a href=\"https://www.teach.cs.toronto.edu/~csc411h/winter/\" target =\" blank\" style={textStyle}>\n            CSC411 (Machine Learning and Data Mining)<br></br>\n        </a>\n\t<a href=\"https://github.com/alecjacobson/geometry-processing\" target =\" blank\" style={textStyle}>\n            CSC419 (Geometric Processing)<br></br>\n        </a>\n\t<a href=\"https://github.com/alecjacobson/geometry-processing-csc2520\" target =\" blank\" style={textStyle}>\n            CSC2520 (Geometric Processing [Grad Course Version])<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~frank/csc2501/\" target =\" blank\" style={textStyle}>\n            CSC485 (Computational Linguistics)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~david/course-notes/csc110-111/\" target =\" blank\" style={textStyle}>\n            CSC110/CSC111 (Foundations of Computer Science)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~hehner/465-2104/\" target =\" blank\" style={textStyle}>\n            CSC465 (Formal Methods in Software Design)<br></br>\n        </a>\n        <a href=\"http://www.cs.toronto.edu/~chechik/courses18/csc2125/\" target =\" blank\" style={textStyle}>\n            CSC2125 (Modeling Methods, Tools and Techniques)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~florian/courses/csc2626w21/\" target =\" blank\" style={textStyle}>\n            CSC2626 (Imitation Learning for Robotics)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~yganjali/courses/csc458/\" target =\" blank\" style={textStyle}>\n            CSC458 (Computer Networks)<br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~nisarg/teaching/373f21/\" target =\" blank\" style={textStyle}>\n            CSC373 (Algorithm Design, Analysis, and Complexity) <br></br>\n        </a>\n        \n\n        <h2 style={{color: 'white'}}>These sites are for Mathematics</h2>\n        <hr />\n        <a href=\"http://www.math.toronto.edu/ilia/Teaching/MAT406.2019/index.html\" target =\" blank\" style={textStyle}>\n            MAT406 (Game Theory) <br></br>\n        </a>\n        <a href=\"https://www.math.toronto.edu/laithy/137/137.html\" target =\" blank\" style={textStyle}>\n            MAT137 (Calculus with Proofs) <br></br>\n        </a>\n        <a href=\"http://www.math.toronto.edu/courses/mat237y1/20199/\" target =\" blank\" style={textStyle}>\n            MAT237 (Multivariable Calculus with Proofs) <br></br>\n        </a>\n        <a href=\"https://www.math.toronto.edu/nhoell/MAT224/\" target =\" blank\" style={textStyle}>\n            MAT224 (Advanced Linear Algebra) <br></br>\n        </a>\n        <a href=\"http://www.math.utoronto.ca/payman/mat247/main.html\" target =\" blank\" style={textStyle}>\n            MAT247 (Advanced Algebra) <br></br>\n        </a>\n        <a href=\"https://www.math.toronto.edu/ilia/Teaching/MAT315.2011/index.html\" target =\" blank\" style={textStyle}>\n            MAT315 (Number Theory) <br></br>\n        </a>\n        <a href=\"https://www.math.toronto.edu/~herzig/347-f19.html\" target =\" blank\" style={textStyle}>\n            MAT347 (Groups, fields, and rings) <br></br>\n        </a>\n        <a href=\"https://www.math.toronto.edu/laithy/3272023/index.html\" target =\" blank\" style={textStyle}>\n            MAT327 (Topology) <br></br>\n        </a>\n        <a href=\"https://www.math.toronto.edu/laithy/3672021/index.html\" target =\" blank\" style={textStyle}>\n            MAT367 (Differential Geometry) <br></br>\n        </a>\n        <a href=\"https://www.cs.toronto.edu/~vinodv/COURSES/MAT302-S13/index.html\" target =\" blank\" style={textStyle}>\n            MAT302 (Introduction to Algebraic Cryptography) <br></br>\n        </a>\n\t<a href=\"https://github.com/siefkenj/2023-MAT-335-webpage\" target =\" blank\" style={textStyle}>\n            MAT335 (Chaos Theory) <br></br>\n        </a>\n\n\n\n        <h2 style={{color: 'white'}}>These sites are for Physics</h2>\n        <hr />\n        <a href=\"https://www.physics.utoronto.ca/apl/405/index.html\" target =\" blank\" style={textStyle}>\n            PHY405 (Electronics Lab) <br></br>\n        </a>\n        <a href=\"https://ugdemos.physics.utoronto.ca/db/courses/phy250\" target =\" blank\" style={textStyle}>\n            PHY250 (Electromagnatism) <br></br>\n        </a>\n        <a href=\"https://www.physics.utoronto.ca/~william/courses/phy293/\" target =\" blank\" style={textStyle}>\n            PHY293 (Waves and Vibrations) <br></br>\n        </a>\n\n\n        <h2 style={{color: 'white'}}>These sites are for Statistics</h2>\n        <hr />\n        <a href=\"https://mcs.utm.utoronto.ca/~nosedal/258.html\" target =\" blank\" style={textStyle}>\n            STA258 (Probability and Statistics 2) <br></br>\n        </a>\n        <a href=\"https://mcs.utm.utoronto.ca/~rosenbl6/sta246/22f/index.shtml\" target =\" blank\" style={textStyle}>\n            STA246 (Computational Probability) <br></br>\n        </a>\n        <a href=\"https://utstat.toronto.edu/~brunner/oldclass/256f19/\" target =\" blank\" style={textStyle}>\n            STA256 (Probability and Statistics 1) <br></br>\n        </a>\n        <a href=\"http://www.individual.utoronto.ca/ranodya/indexChap1.html\" target =\" blank\" style={textStyle}>\n            STA107 (Intro to Probability) <br></br>\n        </a>\n\n        <h2 style={{color: 'white'}}>These sites are for Engineering</h2>\n        <hr />\n        <a href=\"https://eyolfson.com/courses/archive/utoronto/ece344/22fall/\" target =\" blank\" style={textStyle}>\n            ECE344 (Operating Systems) <br></br>\n        </a>\n        <a href=\"https://eyolfson.com/courses/archive/utoronto/ece353/2023-winter/\" target =\" blank\" style={textStyle}>\n            ECE353 (Systems Software) <br></br>\n        </a>\n        <a href=\"https://eyolfson.com/courses/archive/uwaterloo/ece459/12winter/\" target =\" blank\" style={textStyle}>\n            ECE459 (Programming for Performance) <br></br>\n        </a>\n\n\n\n    </AnimatedPage>\n  );\n}\n\nexport default UofTResources;\n","import React from 'react';\nimport Robotics1 from '../images/Robotics1.jpg';\nimport AnimatedPage from '../animations/transitions';\nimport { Button } from '@mui/material';\n\nexport default function CsProjects() {\n    const pictureStyle = {\n        display: 'block',\n        'margin-left': 'auto',\n        'margin-right': 'auto',\n        marginTop: '50px',\n        height: 'auto',\n        width: '40%',\n        border: '25px solid #e4ddca',\n        borderImage: 'linear-gradient(to bottom, #e4ddca, transparent) 1 49%'\n    }\n\n    const textStyle =  {\n        color: 'white',\n        'text-align': 'center'\n    }\n\n    const navItemStyle = {\n        color: 'white', backgroundColor: '#15639A', borderColor: 'green',\n        padding: '5px', \n        fontSize: '16px',\n      };\n\n// Above is CSS code\n\n    return (\n        <AnimatedPage>\n                <div style={{ display: 'flex', flexWrap: 'wrap', marginTop: '20px' }}>\n                <h3 style={{ color: 'white', flex: '0 0 45%', marginLeft: '30px' }}>\n                This is the main project that I have been working on as of late. It functions like a keurig machine,\n                 only that it has tubes sticking out of it that you can put into a bottle of coca-cola/pepsi/etc and it can make a drink for you. \n                In the images below, you can see the current state of it. \n                I still need to code out the arduino board and connect the pumps to it. Il upload the code when I have time to make it \n                </h3>\n                \n                {/* <a href=\"#flip\" target=\"_blank\" rel=\"noopener noreferrer\" >\n                <Button variant=\"contained\" style={navItemStyle}>Flip</Button>\n                </a> */}\n\n                <img src={Robotics1} style={{ flex: '0 0 30%', marginLeft: '60px', ...pictureStyle }}/>\n            </div>\n        </AnimatedPage>\n    )\n} ","import React, { useState } from 'react';\nimport Home from './pages/Home';\nimport UofTResources from './pages/UofTResources';\nimport Button from '@mui/material/Button';\nimport CsProjects from './pages/CsProjects';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('home'); // Maybe there is a more elegant way of doing this? TODO\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const appStyle = {\n    background: \"linear-gradient(to bottom, #282c34 30%, #0398fc 150%)\",\n    height: '100vh',\n    width: '100vw',\n    overflow: 'auto'\n  };\n\n  const navStyle = {\n    color: 'white',\n    backgroundColor: '#282c34',\n    padding: '10px 20px',\n    display: 'flex',\n    justifyContent: 'space-around',\n    position: 'fixed',\n    top: 0,\n    width: '100%',\n    zIndex: 1000\n  };\n\n  const navItemStyle = {\n    color: 'white', backgroundColor: '#15639A', borderColor: 'green',\n    padding: '5px', \n    fontSize: '16px',\n  };\n\n// The above stuff is the CSS Styles. Below is the component we return.\n\n  return (\n    <>\n    <div style={appStyle}>\n\n      <nav style={navStyle}>\n        <a href=\"#home\">\n        <Button\n          variant=\"contained\"\n          style={navItemStyle}\n          onClick={() => handleTabChange('home')}\n          disabled={activeTab === 'home'}\n        >Home</Button>\n        </a>\n        \n        <a href=\"#CsProjects\">\n        <Button\n          variant=\"contained\"\n          style={navItemStyle}\n          onClick={() => handleTabChange('CsProjects')}\n          disabled={activeTab === 'CsProjects'}\n        >Cs Projects</Button>\n        </a>\n\n        <a href=\"#UofTResources\">\n        <Button\n          variant=\"contained\"\n          style={navItemStyle}\n          onClick={() => handleTabChange('UofTResources')}\n          disabled={activeTab === 'UofTResources'}\n        >UofTResources</Button>\n        </a>\n\n        <a href=\"https://www.overleaf.com/read/xyvycpwfxnxj\" target=\"_blank\" rel=\"noopener noreferrer\" >\n          <Button variant=\"contained\" style={navItemStyle}>Resume</Button>\n        </a>\n      </nav>\n      \n      <div style={{marginTop: '60px'}}></div> {/* This is just for padding */}\n      <hr style={{\n        position: 'fixed',\n        top: '50px',  // Adjust as needed\n        width: '100%',\n        border: 'none',\n        height: '2px',\n        backgroundColor: '#fff',  // Adjust as needed\n      }} />\n\n      {activeTab === 'home' && <Home />}\n      {activeTab === 'UofTResources' && <UofTResources /> /* TODO FIGURE OUT HOW TO PASS IN ARGUEMENTS */} \n      {activeTab === 'CsProjects' && <CsProjects /> /* TODO FIGURE OUT HOW TO PASS IN ARGUEMENTS */} \n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n// TODO Figure out the difference between div style= and div className=","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}